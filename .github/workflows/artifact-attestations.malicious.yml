# Copyright 2024 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Test Artifact Attestations (malicious)

on:
  push:
    branches: [main]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [main]
  workflow_dispatch:

permissions: {}

jobs:
  malicious:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      attestations: write
      contents: read
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - name: Setup OPA
        uses: open-policy-agent/setup-opa@34a30e8a924d1b03ce2cf7abe97250bbb1f332b5 # v2.2.1
        with:
          version: 0.64.1
      - run: |
          echo "malicious: $(date)" > my-artifact
      - uses: actions/upload-artifact@v4
        with:
          name: "my-artifact"
          path: "my-artifact"
      - name: Attest Build Provenance
        uses: ianlewis/attest-build-provenance@main
        with:
          subject-path: "my-artifact"
      - name: Verify Build Provenance
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          result="$(gh attestation verify --repo ianlewis/gha-artifact-attestations-test --format json my-artifact)"
          echo "${result}" | jq
          opa_result="$(echo "${result}" | opa eval --stdin-input -f raw -d policy.rego "data.attestation.slsa1.allow == true")"
          echo "opa result: ${opa_result}"
          [ "${opa_result}" != "true" ] || (echo "OPA policy should fail!" && exit 1)
